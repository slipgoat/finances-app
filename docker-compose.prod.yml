version: "3.9"
services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 20s
      interval: 2s
      retries: 10
  api:
    build: .
    volumes:
      - ./tmp/log:/app/log
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    labels: # new
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`${MAIN_HOST}`)"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"
  traefik:
    image: traefik:v2.2
    ports:
      - "8000:80"
      - "443:443"
    environment:
      - "TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${CERT_EMAIL}"
    volumes:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_HOST}`) && (PathPrefix(`/`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${DASHBOARD_USER}:${DASHBOARD_PASSWORD}"

volumes:
  postgres_data: